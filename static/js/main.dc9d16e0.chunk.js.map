{"version":3,"sources":["components/Flashcard/Flashcard.js","components/Loader/Loader.js","utils/firebase.js","components/Practice/Practice.js","components/Home/Home.js","components/Navbar/Navbar.js","components/CreateDeck/CreateDeck.js","components/AddCard/AddCard.js","components/NotFound/NotFound.js","App.js","index.js"],"names":["Flashcard","card","handleFlipCard","className","question","answer","onClick","Loader","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","Practice","deckName","useParams","useState","currentCard","completed","setCompleted","deck","setDeck","deckLength","setDeckLength","useEffect","database","ref","once","snapshot","deckArr","deckSnap","val","id","push","length","handleGoodClick","document","querySelector","classList","add","remove","querySelectorAll","forEach","btn","disabled","newDeck","splice","handleSkipClick","toggle","Home","decks","setDecks","decksSnap","map","to","Math","random","Navbar","exact","CreateDeck","setDeckName","setQuestion","setAnswer","history","useHistory","clearForm","onSubmit","e","preventDefault","deckRef","alert","type","placeholder","value","onChange","target","AddCard","selectedDeck","getElementById","off","htmlFor","NotFound","App","path","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.dc9d16e0.chunk.js","sourcesContent":["import './Flashcard.css';\r\n\r\nconst Flashcard = ({ card, handleFlipCard }) => {\r\n    return (\r\n        <section>\r\n            {card && (\r\n                <div className=\"card-container\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card__front\">\r\n                            <p>{card.question}</p>\r\n                        </div>\r\n                        <div className=\"card__back\">\r\n                            <p className=\"answer\">{card.answer}</p>\r\n                        </div>\r\n                    </div>\r\n                    <button className=\"card__flip-btn\" onClick={handleFlipCard}>\r\n                        FLIP\r\n                    </button>\r\n                </div>\r\n            )}\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default Flashcard;\r\n","import './Loader.css';\r\n\r\nconst Loader = () => {\r\n    return <div className=\"loader\"></div>;\r\n};\r\n\r\nexport default Loader;\r\n","import firebase from 'firebase';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: 'AIzaSyCQTlVD1iuJMKU5zUQjpIu8oB7J86SlN5Q',\r\n    authDomain: 'flashcards-3afb5.firebaseapp.com',\r\n    projectId: 'flashcards-3afb5',\r\n    storageBucket: 'flashcards-3afb5.appspot.com',\r\n    messagingSenderId: '550626058461',\r\n    appId: '1:550626058461:web:1e7b748f277bd83cc13b34',\r\n};\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebase;\r\n","import { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport Flashcard from '../Flashcard/Flashcard';\r\nimport Loader from '../Loader/Loader';\r\nimport firebase from '../../utils/firebase';\r\nimport './Practice.css';\r\n\r\nconst Practice = () => {\r\n    const { deckName } = useParams();\r\n\r\n    const [currentCard, setCurrentCard] = useState(0);\r\n    const [completed, setCompleted] = useState(0);\r\n    const [deck, setDeck] = useState(null);\r\n    const [deckLength, setDeckLength] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const decksRef = firebase.database().ref(`decks/` + deckName);\r\n        decksRef.once('value', (snapshot) => {\r\n            const deckArr = [];\r\n            const deckSnap = snapshot.val();\r\n\r\n            for (let id in deckSnap) {\r\n                deckArr.push(deckSnap[id]);\r\n            }\r\n            setDeck(deckArr);\r\n            setDeckLength(deckArr.length);\r\n        });\r\n    }, []);\r\n\r\n    const handleFlipCard = () => {\r\n        document.querySelector('.answer').classList.remove('hide');\r\n        document.querySelector('.card').classList.toggle('card__flip');\r\n\r\n        document.querySelectorAll('.btn').forEach((btn) => (btn.disabled = false));\r\n    };\r\n\r\n    const handleGoodClick = () => {\r\n        document.querySelector('.answer').classList.add('hide');\r\n        document.querySelector('.card').classList.remove('card__flip');\r\n        document.querySelectorAll('.btn').forEach((btn) => (btn.disabled = true));\r\n\r\n        const newDeck = [...deck];\r\n        newDeck.splice(currentCard, 1);\r\n        setCompleted(completed + 1);\r\n        setDeck(newDeck);\r\n    };\r\n\r\n    const handleSkipClick = () => {\r\n        document.querySelector('.answer').classList.add('hide');\r\n        document.querySelector('.card').classList.remove('card__flip');\r\n        document.querySelectorAll('.btn').forEach((btn) => (btn.disabled = true));\r\n\r\n        const newDeck = [...deck];\r\n        newDeck.push(deck[currentCard]);\r\n        newDeck.splice(currentCard, 1);\r\n        setDeck(newDeck);\r\n    };\r\n\r\n    return (\r\n        <div className=\"content\">\r\n            {completed === deckLength && <h3 className=\"congratulations\">CONGRATULATIONS</h3>}\r\n            {deckLength && (\r\n                <p className=\"completed\">\r\n                    completed {completed}/{deckLength}\r\n                </p>\r\n            )}\r\n\r\n            {deck ? (\r\n                <Flashcard\r\n                    card={deck[currentCard]}\r\n                    handleFlipCard={handleFlipCard}\r\n                    handleSkipClick={handleSkipClick}\r\n                    handleGoodClick={handleGoodClick}\r\n                />\r\n            ) : (\r\n                <Loader />\r\n            )}\r\n\r\n            {deck && completed < deckLength && (\r\n                <div className=\"buttons\">\r\n                    <button className=\"btn btn--skip\" onClick={handleSkipClick}>\r\n                        &#128078;\r\n                    </button>\r\n                    <button className=\"btn btn--good\" onClick={handleGoodClick}>\r\n                        &#128077;\r\n                    </button>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Practice;\r\n","import { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Loader from '../Loader/Loader';\r\nimport firebase from '../../utils/firebase';\r\nimport './Home.css';\r\n\r\nconst Home = () => {\r\n    const [decks, setDecks] = useState();\r\n\r\n    useEffect(() => {\r\n        const decksRef = firebase.database().ref('decks');\r\n        decksRef.once('value', (snapshot) => {\r\n            const deckArr = [];\r\n            const decksSnap = snapshot.val();\r\n\r\n            for (let id in decksSnap) {\r\n                deckArr.push(id);\r\n            }\r\n            setDecks(deckArr);\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <main className=\"content\">\r\n            {decks ? (\r\n                <div className=\"decks__container\">\r\n                    {decks.map((deck) => (\r\n                        <section className=\"select\" key={deck + Math.random()}>\r\n                            <h2 className=\"select__name\">{deck}</h2>\r\n                            <Link to={`/practice/${deck}`}>\r\n                                <button className=\"select__btn\">start</button>\r\n                            </Link>\r\n                        </section>\r\n                    ))}\r\n                </div>\r\n            ) : (\r\n                <Loader />\r\n            )}\r\n        </main>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n","import { Link, NavLink } from 'react-router-dom';\r\nimport './Navbar.css';\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <div className=\"wrapper-nav\">\r\n            <Link to=\"/\">\r\n                <h1 className=\"logo\">Flashcards</h1>\r\n            </Link>\r\n            <nav className=\"navbar\">\r\n                <NavLink exact to=\"/\">\r\n                    Home\r\n                </NavLink>\r\n                <NavLink to=\"/create\">Create</NavLink>\r\n                <NavLink to=\"/add\">Add</NavLink>\r\n                <NavLink to=\"/delete\">Delete</NavLink>\r\n            </nav>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Navbar;\r\n","import { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport firebase from '../../utils/firebase';\r\nimport './CreateDeck.css';\r\n\r\nconst CreateDeck = () => {\r\n    const [deckName, setDeckName] = useState('');\r\n    const [question, setQuestion] = useState('');\r\n    const [answer, setAnswer] = useState('');\r\n    const history = useHistory();\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (deckName && question && answer) {\r\n            const deckRef = firebase.database().ref('decks/' + deckName);\r\n            const card = {\r\n                question,\r\n                answer,\r\n            };\r\n\r\n            deckRef.push(card);\r\n            clearForm();\r\n            history.push('/');\r\n        } else alert('Wypełnij pola formularza!');\r\n    };\r\n\r\n    const clearForm = () => {\r\n        setDeckName('');\r\n        setQuestion('');\r\n        setAnswer('');\r\n    };\r\n\r\n    return (\r\n        <section className=\"content\">\r\n            <h2 className=\"create__header\">Create deck</h2>\r\n            <form className=\"form\" onSubmit={handleSubmit}>\r\n                <input\r\n                    className=\"form__input form__input--name\"\r\n                    type=\"text\"\r\n                    placeholder=\"deck name...\"\r\n                    value={deckName}\r\n                    onChange={(e) => setDeckName(e.target.value)}\r\n                />\r\n\r\n                <input\r\n                    className=\"form__input\"\r\n                    type=\"text\"\r\n                    placeholder=\"question...\"\r\n                    value={question}\r\n                    onChange={(e) => setQuestion(e.target.value)}\r\n                />\r\n                <input\r\n                    className=\"form__input\"\r\n                    type=\"text\"\r\n                    placeholder=\"answer...\"\r\n                    value={answer}\r\n                    onChange={(e) => setAnswer(e.target.value)}\r\n                />\r\n                <button className=\"form__btn\">Create</button>\r\n            </form>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default CreateDeck;\r\n","import { useState, useEffect } from 'react';\r\nimport firebase from '../../utils/firebase';\r\nimport Loader from '../Loader/Loader';\r\nimport './AddCard.css';\r\n\r\nconst AddCard = () => {\r\n    const [decks, setDecks] = useState();\r\n    const [question, setQuestion] = useState('');\r\n    const [answer, setAnswer] = useState('');\r\n\r\n    useEffect(() => {\r\n        const decksRef = firebase.database().ref('decks');\r\n        decksRef.once('value', (snapshot) => {\r\n            const deckArr = [];\r\n            const decksSnap = snapshot.val();\r\n\r\n            for (let id in decksSnap) {\r\n                deckArr.push(id);\r\n            }\r\n            setDecks(deckArr);\r\n        });\r\n    }, []);\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const selectedDeck = document.getElementById('select-deck');\r\n\r\n        if (question && answer) {\r\n            const deckRef = firebase.database().ref('decks/' + selectedDeck.value);\r\n            const card = {\r\n                question,\r\n                answer,\r\n            };\r\n\r\n            deckRef.push(card);\r\n\r\n            deckRef.off();\r\n\r\n            clearForm();\r\n        } else alert('Wypełnij pola formularza!');\r\n    };\r\n\r\n    const clearForm = () => {\r\n        setQuestion('');\r\n        setAnswer('');\r\n    };\r\n\r\n    return (\r\n        <section className=\"content\">\r\n            <h2 className=\"add__header\">Add card</h2>\r\n            {decks ? (\r\n                <form className=\"form\" onSubmit={handleSubmit}>\r\n                    <div className=\"form__selection\">\r\n                        <label htmlFor=\"select-deck\">Deck:</label>\r\n                        {decks && (\r\n                            <select className=\"form__deck-select\" id=\"select-deck\">\r\n                                {decks.map((deck) => (\r\n                                    <option key={deck}>{deck}</option>\r\n                                ))}\r\n                            </select>\r\n                        )}\r\n                    </div>\r\n\r\n                    <input\r\n                        className=\"form__input\"\r\n                        type=\"text\"\r\n                        placeholder=\"question...\"\r\n                        value={question}\r\n                        onChange={(e) => setQuestion(e.target.value)}\r\n                    />\r\n                    <input\r\n                        className=\"form__input\"\r\n                        type=\"text\"\r\n                        placeholder=\"answer...\"\r\n                        value={answer}\r\n                        onChange={(e) => setAnswer(e.target.value)}\r\n                    />\r\n                    <button className=\"form__btn\">Add</button>\r\n                </form>\r\n            ) : (\r\n                <Loader />\r\n            )}\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default AddCard;\r\n","import { Link } from 'react-router-dom';\r\nimport './NotFound.css';\r\n\r\nconst NotFound = () => {\r\n    return (\r\n        <div className=\"content\">\r\n            <h2>Sorry</h2>\r\n            <p>That page cannot be found</p>\r\n            <Link to=\"/\">\r\n                <button className=\"not-found__btn\">Back to home page</button>\r\n            </Link>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NotFound;\r\n","import Practice from './components/Practice/Practice';\nimport { BrowserRouter as Router, Switch, Route, HashRouter } from 'react-router-dom';\nimport Home from './components/Home/Home';\nimport Navbar from './components/Navbar/Navbar';\nimport CreateDeck from './components/CreateDeck/CreateDeck';\nimport AddCard from './components/AddCard/AddCard';\nimport NotFound from './components/NotFound/NotFound';\n\nfunction App() {\n    return (\n        <HashRouter>\n            <div className=\"App\">\n                <Switch>\n                    <Route exact path=\"/\">\n                        <Home />\n                    </Route>\n                    <Route exact path=\"/flashcards\">\n                        <Home />\n                    </Route>\n                    <Route path=\"/practice/:deckName\">\n                        <Practice />\n                    </Route>\n                    <Route path=\"/create\">\n                        <CreateDeck />\n                    </Route>\n                    <Route path=\"/add\">\n                        <AddCard />\n                    </Route>\n                    <Route exact path=\"*\">\n                        <NotFound />\n                    </Route>\n                </Switch>\n                <Navbar />\n            </div>\n        </HashRouter>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}